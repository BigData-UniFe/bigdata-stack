cp-zookeeper:
  enabled: false
  url: zookeeper-headless

cp-kafka:
  brokers: 1
  nodeport:
    enabled: true
    servicePort: 19092
    firstListenerPort: 31090
  cp-zookeeper:
    enabled: false
    url: zookeeper-headless
  persistence:
    enabled: true
    size: 5Gi
    storageClass: microk8s-hostpath
  configurationOverrides:
    'offsets.topic.replication.factor': '1'
    'advertised.listeners': |-
      EXTERNAL://${HOST_IP}:$((31090 + ${KAFKA_BROKER_ID}))

cp-kafka-connect:
  customEnv:
    CUSTOM_SCRIPT_PATH: /etc/scripts/create-connectors.sh
  configurationOverrides:
    'internal.key.converter': 'org.apache.kafka.connect.json.JsonConverter'
    'internal.value.converter': 'org.apache.kafka.connect.json.JsonConverter'
    'config.storage.replication.factor': '1'
    'offset.storage.replication.factor': '1'
    'status.storage.replication.factor': '1'
  volumeMounts:
    - name: create-connectors
      mountPath: /etc/scripts
    - name: elastic-certificates
      mountPath: /usr/local/certificates
  volumes:
    - name: create-connectors
      configMap:
        name: create-connectors
        defaultMode: 0777
    - name: elastic-certificates
      secret:
        secretName: elastic-certificates
        defaultMode: 0777

cp-kafka-rest:
  cp-zookeeper:
    enabled: false
    url: zookeeper-headless

cp-ksql-server:
  enabled: false

cp-control-center:
  configurationOverrides:
    'replication.factor': '1'
